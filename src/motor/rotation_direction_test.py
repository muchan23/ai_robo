#!/usr/bin/env python3
"""
сѓ┐сѓцсЃцтЏъУ╗бТќ╣тљЉсЃєсѓ╣сЃѕсѓ╣сѓ»сЃфсЃЌсЃѕ
тидтЈ│сЂ«сЃбсЃ╝сѓ┐сЃ╝сЂїтљїсЂўТќ╣тљЉсЂФтЏъУ╗бсЂЎсѓІсЂІсѓњуб║УфЇсЂЎсѓІт░ѓућесЃєсѓ╣сЃѕ
"""

import time
import sys
import os

# сЃЉсѓ╣сѓњУ┐йтіасЂЌсЂдсЃбсЃ╝сѓ┐сЃ╝тѕХтЙАсѓ»сЃЕсѓ╣сѓњсѓцсЃ│сЃЮсЃ╝сЃѕ
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from motor.motor_controller import MotorController

def main():
    """сѓ┐сѓцсЃцтЏъУ╗бТќ╣тљЉсЃєсѓ╣сЃѕсЂ«сЃАсѓцсЃ│жќбТЋ░"""
    print("­Ъћё сѓ┐сѓцсЃцтЏъУ╗бТќ╣тљЉсЃєсѓ╣сЃѕ")
    print("=" * 60)
    print("сЂЊсЂ«сЃєсѓ╣сЃѕсЂ»тидтЈ│сЂ«сѓ┐сѓцсЃцсЂїтљїсЂўТќ╣тљЉсЂФтЏъУ╗бсЂЎсѓІсЂІсѓњуб║УфЇсЂЌсЂЙсЂЎ")
    print()
    print("­ЪЊІ сЃєсѓ╣сЃѕтєЁт«╣:")
    print("  1. тидсЃбсЃ╝сѓ┐сЃ╝ (сЃбсЃ╝сѓ┐сЃ╝A) тЅЇжђ▓")
    print("  2. тЈ│сЃбсЃ╝сѓ┐сЃ╝ (сЃбсЃ╝сѓ┐сЃ╝B) тЅЇжђ▓")
    print("  3. СИАсЃбсЃ╝сѓ┐сЃ╝тЅЇжђ▓")
    print("  4. тидсЃбсЃ╝сѓ┐сЃ╝ (сЃбсЃ╝сѓ┐сЃ╝A) тЙїжђђ")
    print("  5. тЈ│сЃбсЃ╝сѓ┐сЃ╝ (сЃбсЃ╝сѓ┐сЃ╝B) тЙїжђђ")
    print("  6. СИАсЃбсЃ╝сѓ┐сЃ╝тЙїжђђ")
    print()
    print("Рџа№ИЈ  Т│еТёЈС║ІжаЁ:")
    print("  - сЃГсЃюсЃЃсЃѕсѓњт«ЅтЁесЂфта┤ТЅђсЂФуй«сЂёсЂдсЂЈсЂасЂЋсЂё")
    print("  - сѓ┐сѓцсЃцсЂїтЏъУ╗бсЂЎсѓІТќ╣тљЉсѓњсѓѕсЂЈУд│т»ЪсЂЌсЂдсЂЈсЂасЂЋсЂё")
    print("  - тидтЈ│сЂ«сѓ┐сѓцсЃцсЂїтљїсЂўТќ╣тљЉсЂФтЏъУ╗бсЂЎсѓІсЂЊсЂесѓњуб║УфЇсЂЌсЂдсЂЈсЂасЂЋсЂё")
    print()
    
    input("EnterсѓГсЃ╝сѓњТі╝сЂЌсЂдсЃєсѓ╣сЃѕсѓњжќІтДІ...")
    
    try:
        # сЃбсЃ╝сѓ┐сЃ╝тѕХтЙАсѓисѓ╣сЃєсЃасѓњтѕЮТюЪтїќ
        motor_controller = MotorController()
        
        # тЏъУ╗бТќ╣тљЉсЃєсѓ╣сЃѕсѓњт«ЪУАї
        motor_controller.test_rotation_direction(speed=30, duration=3.0)
        
        print("\n­Ъј» У┐йтіасЃєсѓ╣сЃѕ: жђЪт║дсѓњтцЅсЂѕсЂдсЃєсѓ╣сЃѕ")
        print("=" * 50)
        
        # уЋ░сЂфсѓІжђЪт║дсЂДсЂ«сЃєсѓ╣сЃѕ
        test_speeds = [20, 50, 80]
        for speed in test_speeds:
            print(f"\n­ЪџЌ жђЪт║д{speed}%сЂДсЂ«сЃєсѓ╣сЃѕ")
            motor_controller.execute_command({
                "action": "move_forward",
                "speed": speed,
                "duration": 2.0,
                "motor": "both"
            })
            time.sleep(1)
        
        print("\nРюЁ тЁесЃєсѓ╣сЃѕт«їС║є")
        print("­ЪЊі ухљТъюуб║УфЇ:")
        print("  - тидтЈ│сЂ«сѓ┐сѓцсЃцсЂїтљїсЂўТќ╣тљЉсЂФтЏъУ╗бсЂЌсЂЙсЂЌсЂЪсЂІ№╝Ъ")
        print("  - жђЪт║дсѓњтцЅсЂѕсЂдсѓѓтљїсЂўТќ╣тљЉсЂФтЏъУ╗бсЂЌсЂЙсЂЌсЂЪсЂІ№╝Ъ")
        print()
        print("РЮї сѓѓсЂЌжђєТќ╣тљЉсЂФтЏъУ╗бсЂЌсЂдсЂёсѓІта┤тљѕ:")
        print("  1. сЃбсЃ╝сѓ┐сЃ╝сЂ«жЁЇуиџсѓњуб║УфЇсЂЌсЂдсЂЈсЂасЂЋсЂё")
        print("  2. L298NсЃЅсЃЕсѓцсЃљсЃ╝сЂ«ТјЦуХџсѓњуб║УфЇсЂЌсЂдсЂЈсЂасЂЋсЂё")
        print("  3. т┐ЁУдЂсЂФт┐юсЂўсЂджЁЇуиџсѓњС║цТЈЏсЂЌсЂдсЂЈсЂасЂЋсЂё")
        
    except KeyboardInterrupt:
        print("\nРЈ╣№ИЈ сЃєсѓ╣сЃѕсЂїСИГТќГсЂЋсѓїсЂЙсЂЌсЂЪ")
    except Exception as e:
        print(f"РЮї сѓесЃЕсЃ╝: {e}")
        return 1
    finally:
        if 'motor_controller' in locals():
            motor_controller.cleanup()
    
    return 0


if __name__ == "__main__":
    exit(main())
